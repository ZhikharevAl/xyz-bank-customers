{"uid":"707075384f04ff2a","name":"test_sort_customers_by_first_name[ascending]","fullName":"tests.ui.test_customer_list.TestCustomerList#test_sort_customers_by_first_name","historyId":"2f8895c381e08602f615ee4b4606d8ea","time":{"start":1727441296767,"stop":1727441296767,"duration":0},"description":"\n        Test sorting customers by first name in the specified order.\n\n        This test verifies that customers can be sorted by their first names\n        in either descending or ascending order and compares the programmatically\n        sorted names with the UI-sorted names.\n\n        Args:\n            browser (WebDriver): The Selenium WebDriver instance.\n            sort_direction (str): The direction to sort the names\n            ('descending' or 'ascending').\n\n        Returns:\n            None\n        ","descriptionHtml":"\n<h2>Testing Customer List in XYZ Bank</h2>\n<p>This test suite verifies the functionality of the customer list\n   in the XYZ Bank system, including:</p>\n<ul>\n    <li>Opening the Customer List page</li>\n    <li>Verifying the page is loaded</li>\n    <li>Sorting customers by first name in descending order (one click)</li>\n    <li>Sorting customers by first name in ascending order (two clicks)</li>\n    <li>Comparing programmatically sorted names with UI-sorted names</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55eb5cecc6ca <unknown>\n#1 0x55eb5cb9d600 <unknown>\n#2 0x55eb5cbdc13c <unknown>\n#3 0x55eb5cbdb0b2 <unknown>\n#4 0x55eb5cbd5f24 <unknown>\n#5 0x55eb5cbd12f8 <unknown>\n#6 0x55eb5cc1bce8 <unknown>\n#7 0x55eb5cc0f643 <unknown>\n#8 0x55eb5cbdfd31 <unknown>\n#9 0x55eb5cbe079e <unknown>\n#10 0x55eb5ce9425b <unknown>\n#11 0x55eb5ce981f2 <unknown>\n#12 0x55eb5ce81615 <unknown>\n#13 0x55eb5ce98d82 <unknown>\n#14 0x55eb5ce6625f <unknown>\n#15 0x55eb5cebbe68 <unknown>\n#16 0x55eb5cebc040 <unknown>\n#17 0x55eb5cecb49c <unknown>\n#18 0x7fbf85894ac3 <unknown>","statusTrace":"@pytest.fixture\n    def browser() -> WebDriver:\n        \"\"\"\n        Fixture to initialize and provide a WebDriver instance.\n    \n        Returns:\n            WebDriver: The WebDriver instance for the browser.\n        \"\"\"\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7464e0a2a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55eb5cebc040 \\\\u003Cunknown>\\\\n#17 0x55eb5cecb49c \\\\u003Cunknown>\\\\n#18 0x7fbf85894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nE       Current browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nE       Stacktrace:\nE       #0 0x55eb5cecc6ca <unknown>\nE       #1 0x55eb5cb9d600 <unknown>\nE       #2 0x55eb5cbdc13c <unknown>\nE       #3 0x55eb5cbdb0b2 <unknown>\nE       #4 0x55eb5cbd5f24 <unknown>\nE       #5 0x55eb5cbd12f8 <unknown>\nE       #6 0x55eb5cc1bce8 <unknown>\nE       #7 0x55eb5cc0f643 <unknown>\nE       #8 0x55eb5cbdfd31 <unknown>\nE       #9 0x55eb5cbe079e <unknown>\nE       #10 0x55eb5ce9425b <unknown>\nE       #11 0x55eb5ce981f2 <unknown>\nE       #12 0x55eb5ce81615 <unknown>\nE       #13 0x55eb5ce98d82 <unknown>\nE       #14 0x55eb5ce6625f <unknown>\nE       #15 0x55eb5cebbe68 <unknown>\nE       #16 0x55eb5cebc040 <unknown>\nE       #17 0x55eb5cecb49c <unknown>\nE       #18 0x7fbf85894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"_skip_sensitive","time":{"start":1727441296768,"stop":1727441296768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser","time":{"start":1727441296768,"stop":1727441297271,"duration":503},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55eb5cecc6ca <unknown>\n#1 0x55eb5cb9d600 <unknown>\n#2 0x55eb5cbdc13c <unknown>\n#3 0x55eb5cbdb0b2 <unknown>\n#4 0x55eb5cbd5f24 <unknown>\n#5 0x55eb5cbd12f8 <unknown>\n#6 0x55eb5cc1bce8 <unknown>\n#7 0x55eb5cc0f643 <unknown>\n#8 0x55eb5cbdfd31 <unknown>\n#9 0x55eb5cbe079e <unknown>\n#10 0x55eb5ce9425b <unknown>\n#11 0x55eb5ce981f2 <unknown>\n#12 0x55eb5ce81615 <unknown>\n#13 0x55eb5ce98d82 <unknown>\n#14 0x55eb5ce6625f <unknown>\n#15 0x55eb5cebbe68 <unknown>\n#16 0x55eb5cebc040 <unknown>\n#17 0x55eb5cecb49c <unknown>\n#18 0x7fbf85894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/xyz-bank-customers/xyz-bank-customers/conftest.py\", line 20, in browser\n    driver = webdriver.Chrome(options=chrome_options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"\n        Test sorting customers by first name in the specified order.\n\n        This test verifies that customers can be sorted by their first names\n        in either descending or ascending order and compares the programmatically\n        sorted names with the UI-sorted names.\n\n        Args:\n            browser (WebDriver): The Selenium WebDriver instance.\n            sort_direction (str): The direction to sort the names\n            ('descending' or 'ascending').\n\n        Returns:\n            None\n        ","descriptionHtml":"\n<h2>Testing Customer List in XYZ Bank</h2>\n<p>This test suite verifies the functionality of the customer list\n   in the XYZ Bank system, including:</p>\n<ul>\n    <li>Opening the Customer List page</li>\n    <li>Verifying the page is loaded</li>\n    <li>Sorting customers by first name in descending order (one click)</li>\n    <li>Sorting customers by first name in ascending order (two clicks)</li>\n    <li>Comparing programmatically sorted names with UI-sorted names</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55eb5cecc6ca <unknown>\n#1 0x55eb5cb9d600 <unknown>\n#2 0x55eb5cbdc13c <unknown>\n#3 0x55eb5cbdb0b2 <unknown>\n#4 0x55eb5cbd5f24 <unknown>\n#5 0x55eb5cbd12f8 <unknown>\n#6 0x55eb5cc1bce8 <unknown>\n#7 0x55eb5cc0f643 <unknown>\n#8 0x55eb5cbdfd31 <unknown>\n#9 0x55eb5cbe079e <unknown>\n#10 0x55eb5ce9425b <unknown>\n#11 0x55eb5ce981f2 <unknown>\n#12 0x55eb5ce81615 <unknown>\n#13 0x55eb5ce98d82 <unknown>\n#14 0x55eb5ce6625f <unknown>\n#15 0x55eb5cebbe68 <unknown>\n#16 0x55eb5cebc040 <unknown>\n#17 0x55eb5cecb49c <unknown>\n#18 0x7fbf85894ac3 <unknown>","statusTrace":"@pytest.fixture\n    def browser() -> WebDriver:\n        \"\"\"\n        Fixture to initialize and provide a WebDriver instance.\n    \n        Returns:\n            WebDriver: The WebDriver instance for the browser.\n        \"\"\"\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7464e0a2a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x55eb5cebc040 \\\\u003Cunknown>\\\\n#17 0x55eb5cecb49c \\\\u003Cunknown>\\\\n#18 0x7fbf85894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nE       Current browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nE       Stacktrace:\nE       #0 0x55eb5cecc6ca <unknown>\nE       #1 0x55eb5cb9d600 <unknown>\nE       #2 0x55eb5cbdc13c <unknown>\nE       #3 0x55eb5cbdb0b2 <unknown>\nE       #4 0x55eb5cbd5f24 <unknown>\nE       #5 0x55eb5cbd12f8 <unknown>\nE       #6 0x55eb5cc1bce8 <unknown>\nE       #7 0x55eb5cc0f643 <unknown>\nE       #8 0x55eb5cbdfd31 <unknown>\nE       #9 0x55eb5cbe079e <unknown>\nE       #10 0x55eb5ce9425b <unknown>\nE       #11 0x55eb5ce981f2 <unknown>\nE       #12 0x55eb5ce81615 <unknown>\nE       #13 0x55eb5ce98d82 <unknown>\nE       #14 0x55eb5ce6625f <unknown>\nE       #15 0x55eb5cebbe68 <unknown>\nE       #16 0x55eb5cebc040 <unknown>\nE       #17 0x55eb5cecb49c <unknown>\nE       #18 0x7fbf85894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[],"attachments":[{"uid":"2b5b7bb4790714da","name":"log","source":"2b5b7bb4790714da.txt","type":"text/plain","size":29457}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"story","value":"Sort customers by first name"},{"name":"epic","value":"Customer Management"},{"name":"feature","value":"Customer List"},{"name":"severity","value":"normal"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"tests.ui"},{"name":"suite","value":"test_customer_list"},{"name":"subSuite","value":"TestCustomerList"},{"name":"host","value":"fv-az1382-173"},{"name":"thread","value":"2305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.test_customer_list"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"sort_direction","value":"'ascending'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1c331897abb699d2","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x561e609406ca <unknown>\n#1 0x561e60611600 <unknown>\n#2 0x561e6065013c <unknown>\n#3 0x561e6064f0b2 <unknown>\n#4 0x561e60649f24 <unknown>\n#5 0x561e606452f8 <unknown>\n#6 0x561e6068fce8 <unknown>\n#7 0x561e60683643 <unknown>\n#8 0x561e60653d31 <unknown>\n#9 0x561e6065479e <unknown>\n#10 0x561e6090825b <unknown>\n#11 0x561e6090c1f2 <unknown>\n#12 0x561e608f5615 <unknown>\n#13 0x561e6090cd82 <unknown>\n#14 0x561e608da25f <unknown>\n#15 0x561e6092fe68 <unknown>\n#16 0x561e60930040 <unknown>\n#17 0x561e6093f49c <unknown>\n#18 0x7f6271694ac3 <unknown>","time":{"start":1727441290955,"stop":1727441290955,"duration":0}},{"uid":"7d60a5dde0d79b7d","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55ec442786ca <unknown>\n#1 0x55ec43f49600 <unknown>\n#2 0x55ec43f8813c <unknown>\n#3 0x55ec43f870b2 <unknown>\n#4 0x55ec43f81f24 <unknown>\n#5 0x55ec43f7d2f8 <unknown>\n#6 0x55ec43fc7ce8 <unknown>\n#7 0x55ec43fbb643 <unknown>\n#8 0x55ec43f8bd31 <unknown>\n#9 0x55ec43f8c79e <unknown>\n#10 0x55ec4424025b <unknown>\n#11 0x55ec442441f2 <unknown>\n#12 0x55ec4422d615 <unknown>\n#13 0x55ec44244d82 <unknown>\n#14 0x55ec4421225f <unknown>\n#15 0x55ec44267e68 <unknown>\n#16 0x55ec44268040 <unknown>\n#17 0x55ec4427749c <unknown>\n#18 0x7ff0fd694ac3 <unknown>","time":{"start":1727441285269,"stop":1727441285269,"duration":0}},{"uid":"4fdc6afebc2e33f4","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55dcb6f0a6ca <unknown>\n#1 0x55dcb6bdb600 <unknown>\n#2 0x55dcb6c1a13c <unknown>\n#3 0x55dcb6c190b2 <unknown>\n#4 0x55dcb6c13f24 <unknown>\n#5 0x55dcb6c0f2f8 <unknown>\n#6 0x55dcb6c59ce8 <unknown>\n#7 0x55dcb6c4d643 <unknown>\n#8 0x55dcb6c1dd31 <unknown>\n#9 0x55dcb6c1e79e <unknown>\n#10 0x55dcb6ed225b <unknown>\n#11 0x55dcb6ed61f2 <unknown>\n#12 0x55dcb6ebf615 <unknown>\n#13 0x55dcb6ed6d82 <unknown>\n#14 0x55dcb6ea425f <unknown>\n#15 0x55dcb6ef9e68 <unknown>\n#16 0x55dcb6efa040 <unknown>\n#17 0x55dcb6f0949c <unknown>\n#18 0x7f59c7494ac3 <unknown>","time":{"start":1727441279591,"stop":1727441279592,"duration":1}},{"uid":"6c8d50d782a1d4bf","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x559dbb5676ca <unknown>\n#1 0x559dbb238600 <unknown>\n#2 0x559dbb27713c <unknown>\n#3 0x559dbb2760b2 <unknown>\n#4 0x559dbb270f24 <unknown>\n#5 0x559dbb26c2f8 <unknown>\n#6 0x559dbb2b6ce8 <unknown>\n#7 0x559dbb2aa643 <unknown>\n#8 0x559dbb27ad31 <unknown>\n#9 0x559dbb27b79e <unknown>\n#10 0x559dbb52f25b <unknown>\n#11 0x559dbb5331f2 <unknown>\n#12 0x559dbb51c615 <unknown>\n#13 0x559dbb533d82 <unknown>\n#14 0x559dbb50125f <unknown>\n#15 0x559dbb556e68 <unknown>\n#16 0x559dbb557040 <unknown>\n#17 0x559dbb56649c <unknown>\n#18 0x7fbbeb494ac3 <unknown>","time":{"start":1727441273856,"stop":1727441273856,"duration":0}},{"uid":"3008fe2ba9a1d33d","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x558026bde6ca <unknown>\n#1 0x5580268af600 <unknown>\n#2 0x5580268ee13c <unknown>\n#3 0x5580268ed0b2 <unknown>\n#4 0x5580268e7f24 <unknown>\n#5 0x5580268e32f8 <unknown>\n#6 0x55802692dce8 <unknown>\n#7 0x558026921643 <unknown>\n#8 0x5580268f1d31 <unknown>\n#9 0x5580268f279e <unknown>\n#10 0x558026ba625b <unknown>\n#11 0x558026baa1f2 <unknown>\n#12 0x558026b93615 <unknown>\n#13 0x558026baad82 <unknown>\n#14 0x558026b7825f <unknown>\n#15 0x558026bcde68 <unknown>\n#16 0x558026bce040 <unknown>\n#17 0x558026bdd49c <unknown>\n#18 0x7f8642494ac3 <unknown>","time":{"start":1727441267639,"stop":1727441267639,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ui"]},"source":"707075384f04ff2a.json","parameterValues":["'ascending'"]}