{"uid":"e52d625f91ce247f","name":"test_add_customer","fullName":"tests.ui.test_add_customer.TestAddCustomer#test_add_customer","historyId":"3778a23230ae15cb76cc3ec6844ae9b0","time":{"start":1727441296767,"stop":1727441296767,"duration":0},"description":"\n        Add a new customer with valid data.\n\n        This test verifies the functionality of adding a new customer\n        with valid data to the customer management system.\n\n        Args:\n            browser (WebDriver): The Selenium WebDriver instance.\n\n        Returns:\n            None\n        ","descriptionHtml":"\n<h2>Testing Customer Registration in XYZ Bank</h2>\n<p>This test suite verifies the functionality of adding customer\n            to the XYZ Bank system, including:</p>\n<ul>\n    <li>Generating test data for customer</li>\n    <li>Opening the Add Customer page</li>\n    <li>For each customer:</li>\n    <ul>\n        <li>Filling in the customer information (First Name, Last Name, Post Code)</li>\n        <li>Submitting the registration form</li>\n        <li>Verifying the success message</li>\n        <li>Accepting the alert</li>\n    </ul>\n    <li>Verifying that customer were added successfully</li>\n</ul>\n<p>The test uses specially generated data where:</p>\n<ul>\n    <li>Post Code is a 10-digit number</li>\n    <li>First Name is generated based on the Post Code</li>\n    <li>Last Name is randomly generated</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x562010e8f6ca <unknown>\n#1 0x562010b60600 <unknown>\n#2 0x562010b9f13c <unknown>\n#3 0x562010b9e0b2 <unknown>\n#4 0x562010b98f24 <unknown>\n#5 0x562010b942f8 <unknown>\n#6 0x562010bdece8 <unknown>\n#7 0x562010bd2643 <unknown>\n#8 0x562010ba2d31 <unknown>\n#9 0x562010ba379e <unknown>\n#10 0x562010e5725b <unknown>\n#11 0x562010e5b1f2 <unknown>\n#12 0x562010e44615 <unknown>\n#13 0x562010e5bd82 <unknown>\n#14 0x562010e2925f <unknown>\n#15 0x562010e7ee68 <unknown>\n#16 0x562010e7f040 <unknown>\n#17 0x562010e8e49c <unknown>\n#18 0x7fe5ad094ac3 <unknown>","statusTrace":"@pytest.fixture\n    def browser() -> WebDriver:\n        \"\"\"\n        Fixture to initialize and provide a WebDriver instance.\n    \n        Returns:\n            WebDriver: The WebDriver instance for the browser.\n        \"\"\"\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa7ca8ad820>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x562010e7f040 \\\\u003Cunknown>\\\\n#17 0x562010e8e49c \\\\u003Cunknown>\\\\n#18 0x7fe5ad094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nE       Current browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nE       Stacktrace:\nE       #0 0x562010e8f6ca <unknown>\nE       #1 0x562010b60600 <unknown>\nE       #2 0x562010b9f13c <unknown>\nE       #3 0x562010b9e0b2 <unknown>\nE       #4 0x562010b98f24 <unknown>\nE       #5 0x562010b942f8 <unknown>\nE       #6 0x562010bdece8 <unknown>\nE       #7 0x562010bd2643 <unknown>\nE       #8 0x562010ba2d31 <unknown>\nE       #9 0x562010ba379e <unknown>\nE       #10 0x562010e5725b <unknown>\nE       #11 0x562010e5b1f2 <unknown>\nE       #12 0x562010e44615 <unknown>\nE       #13 0x562010e5bd82 <unknown>\nE       #14 0x562010e2925f <unknown>\nE       #15 0x562010e7ee68 <unknown>\nE       #16 0x562010e7f040 <unknown>\nE       #17 0x562010e8e49c <unknown>\nE       #18 0x7fe5ad094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1727441296768,"stop":1727441297248,"duration":480},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x562010e8f6ca <unknown>\n#1 0x562010b60600 <unknown>\n#2 0x562010b9f13c <unknown>\n#3 0x562010b9e0b2 <unknown>\n#4 0x562010b98f24 <unknown>\n#5 0x562010b942f8 <unknown>\n#6 0x562010bdece8 <unknown>\n#7 0x562010bd2643 <unknown>\n#8 0x562010ba2d31 <unknown>\n#9 0x562010ba379e <unknown>\n#10 0x562010e5725b <unknown>\n#11 0x562010e5b1f2 <unknown>\n#12 0x562010e44615 <unknown>\n#13 0x562010e5bd82 <unknown>\n#14 0x562010e2925f <unknown>\n#15 0x562010e7ee68 <unknown>\n#16 0x562010e7f040 <unknown>\n#17 0x562010e8e49c <unknown>\n#18 0x7fe5ad094ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/xyz-bank-customers/xyz-bank-customers/conftest.py\", line 20, in browser\n    driver = webdriver.Chrome(options=chrome_options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 212, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 299, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"_skip_sensitive","time":{"start":1727441296768,"stop":1727441296768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"\n        Add a new customer with valid data.\n\n        This test verifies the functionality of adding a new customer\n        with valid data to the customer management system.\n\n        Args:\n            browser (WebDriver): The Selenium WebDriver instance.\n\n        Returns:\n            None\n        ","descriptionHtml":"\n<h2>Testing Customer Registration in XYZ Bank</h2>\n<p>This test suite verifies the functionality of adding customer\n            to the XYZ Bank system, including:</p>\n<ul>\n    <li>Generating test data for customer</li>\n    <li>Opening the Add Customer page</li>\n    <li>For each customer:</li>\n    <ul>\n        <li>Filling in the customer information (First Name, Last Name, Post Code)</li>\n        <li>Submitting the registration form</li>\n        <li>Verifying the success message</li>\n        <li>Accepting the alert</li>\n    </ul>\n    <li>Verifying that customer were added successfully</li>\n</ul>\n<p>The test uses specially generated data where:</p>\n<ul>\n    <li>Post Code is a 10-digit number</li>\n    <li>First Name is generated based on the Post Code</li>\n    <li>Last Name is randomly generated</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x562010e8f6ca <unknown>\n#1 0x562010b60600 <unknown>\n#2 0x562010b9f13c <unknown>\n#3 0x562010b9e0b2 <unknown>\n#4 0x562010b98f24 <unknown>\n#5 0x562010b942f8 <unknown>\n#6 0x562010bdece8 <unknown>\n#7 0x562010bd2643 <unknown>\n#8 0x562010ba2d31 <unknown>\n#9 0x562010ba379e <unknown>\n#10 0x562010e5725b <unknown>\n#11 0x562010e5b1f2 <unknown>\n#12 0x562010e44615 <unknown>\n#13 0x562010e5bd82 <unknown>\n#14 0x562010e2925f <unknown>\n#15 0x562010e7ee68 <unknown>\n#16 0x562010e7f040 <unknown>\n#17 0x562010e8e49c <unknown>\n#18 0x7fe5ad094ac3 <unknown>","statusTrace":"@pytest.fixture\n    def browser() -> WebDriver:\n        \"\"\"\n        Fixture to initialize and provide a WebDriver instance.\n    \n        Returns:\n            WebDriver: The WebDriver instance for the browser.\n        \"\"\"\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:212: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:299: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa7ca8ad820>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...\\\\n#16 0x562010e7f040 \\\\u003Cunknown>\\\\n#17 0x562010e8e49c \\\\u003Cunknown>\\\\n#18 0x7fe5ad094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nE       Current browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nE       Stacktrace:\nE       #0 0x562010e8f6ca <unknown>\nE       #1 0x562010b60600 <unknown>\nE       #2 0x562010b9f13c <unknown>\nE       #3 0x562010b9e0b2 <unknown>\nE       #4 0x562010b98f24 <unknown>\nE       #5 0x562010b942f8 <unknown>\nE       #6 0x562010bdece8 <unknown>\nE       #7 0x562010bd2643 <unknown>\nE       #8 0x562010ba2d31 <unknown>\nE       #9 0x562010ba379e <unknown>\nE       #10 0x562010e5725b <unknown>\nE       #11 0x562010e5b1f2 <unknown>\nE       #12 0x562010e44615 <unknown>\nE       #13 0x562010e5bd82 <unknown>\nE       #14 0x562010e2925f <unknown>\nE       #15 0x562010e7ee68 <unknown>\nE       #16 0x562010e7f040 <unknown>\nE       #17 0x562010e8e49c <unknown>\nE       #18 0x7fe5ad094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[],"attachments":[{"uid":"1ea59d3c5c12df1b","name":"log","source":"1ea59d3c5c12df1b.txt","type":"text/plain","size":29457}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"feature","value":"Add Customer"},{"name":"story","value":"Add a new customer with valid data"},{"name":"severity","value":"critical"},{"name":"epic","value":"Customer Management"},{"name":"tag","value":"ui"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.ui"},{"name":"suite","value":"test_add_customer"},{"name":"subSuite","value":"TestAddCustomer"},{"name":"host","value":"fv-az1382-173"},{"name":"thread","value":"2299-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.test_add_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"e26a9bac80f8c75d","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55e7f5a806ca <unknown>\n#1 0x55e7f5751600 <unknown>\n#2 0x55e7f579013c <unknown>\n#3 0x55e7f578f0b2 <unknown>\n#4 0x55e7f5789f24 <unknown>\n#5 0x55e7f57852f8 <unknown>\n#6 0x55e7f57cfce8 <unknown>\n#7 0x55e7f57c3643 <unknown>\n#8 0x55e7f5793d31 <unknown>\n#9 0x55e7f579479e <unknown>\n#10 0x55e7f5a4825b <unknown>\n#11 0x55e7f5a4c1f2 <unknown>\n#12 0x55e7f5a35615 <unknown>\n#13 0x55e7f5a4cd82 <unknown>\n#14 0x55e7f5a1a25f <unknown>\n#15 0x55e7f5a6fe68 <unknown>\n#16 0x55e7f5a70040 <unknown>\n#17 0x55e7f5a7f49c <unknown>\n#18 0x7f7a5ee94ac3 <unknown>","time":{"start":1727441290983,"stop":1727441290983,"duration":0}},{"uid":"b2685b6fe06a39e9","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55b3d08296ca <unknown>\n#1 0x55b3d04fa600 <unknown>\n#2 0x55b3d053913c <unknown>\n#3 0x55b3d05380b2 <unknown>\n#4 0x55b3d0532f24 <unknown>\n#5 0x55b3d052e2f8 <unknown>\n#6 0x55b3d0578ce8 <unknown>\n#7 0x55b3d056c643 <unknown>\n#8 0x55b3d053cd31 <unknown>\n#9 0x55b3d053d79e <unknown>\n#10 0x55b3d07f125b <unknown>\n#11 0x55b3d07f51f2 <unknown>\n#12 0x55b3d07de615 <unknown>\n#13 0x55b3d07f5d82 <unknown>\n#14 0x55b3d07c325f <unknown>\n#15 0x55b3d0818e68 <unknown>\n#16 0x55b3d0819040 <unknown>\n#17 0x55b3d082849c <unknown>\n#18 0x7f95cc694ac3 <unknown>","time":{"start":1727441285255,"stop":1727441285255,"duration":0}},{"uid":"6cbfa4a116e66dec","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55a89c0726ca <unknown>\n#1 0x55a89bd43600 <unknown>\n#2 0x55a89bd8213c <unknown>\n#3 0x55a89bd810b2 <unknown>\n#4 0x55a89bd7bf24 <unknown>\n#5 0x55a89bd772f8 <unknown>\n#6 0x55a89bdc1ce8 <unknown>\n#7 0x55a89bdb5643 <unknown>\n#8 0x55a89bd85d31 <unknown>\n#9 0x55a89bd8679e <unknown>\n#10 0x55a89c03a25b <unknown>\n#11 0x55a89c03e1f2 <unknown>\n#12 0x55a89c027615 <unknown>\n#13 0x55a89c03ed82 <unknown>\n#14 0x55a89c00c25f <unknown>\n#15 0x55a89c061e68 <unknown>\n#16 0x55a89c062040 <unknown>\n#17 0x55a89c07149c <unknown>\n#18 0x7f6013c94ac3 <unknown>","time":{"start":1727441279557,"stop":1727441279557,"duration":0}},{"uid":"6ed1bfeefe3c6e9e","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x5560915476ca <unknown>\n#1 0x556091218600 <unknown>\n#2 0x55609125713c <unknown>\n#3 0x5560912560b2 <unknown>\n#4 0x556091250f24 <unknown>\n#5 0x55609124c2f8 <unknown>\n#6 0x556091296ce8 <unknown>\n#7 0x55609128a643 <unknown>\n#8 0x55609125ad31 <unknown>\n#9 0x55609125b79e <unknown>\n#10 0x55609150f25b <unknown>\n#11 0x5560915131f2 <unknown>\n#12 0x5560914fc615 <unknown>\n#13 0x556091513d82 <unknown>\n#14 0x5560914e125f <unknown>\n#15 0x556091536e68 <unknown>\n#16 0x556091537040 <unknown>\n#17 0x55609154649c <unknown>\n#18 0x7facc5a94ac3 <unknown>","time":{"start":1727441273842,"stop":1727441273842,"duration":0}},{"uid":"d872bfd48b83f42e","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 127\nCurrent browser version is 129.0.6668.58 with binary path /usr/bin/google-chrome\nStacktrace:\n#0 0x55bf674856ca <unknown>\n#1 0x55bf67156600 <unknown>\n#2 0x55bf6719513c <unknown>\n#3 0x55bf671940b2 <unknown>\n#4 0x55bf6718ef24 <unknown>\n#5 0x55bf6718a2f8 <unknown>\n#6 0x55bf671d4ce8 <unknown>\n#7 0x55bf671c8643 <unknown>\n#8 0x55bf67198d31 <unknown>\n#9 0x55bf6719979e <unknown>\n#10 0x55bf6744d25b <unknown>\n#11 0x55bf674511f2 <unknown>\n#12 0x55bf6743a615 <unknown>\n#13 0x55bf67451d82 <unknown>\n#14 0x55bf6741f25f <unknown>\n#15 0x55bf67474e68 <unknown>\n#16 0x55bf67475040 <unknown>\n#17 0x55bf6748449c <unknown>\n#18 0x7fdc4a294ac3 <unknown>","time":{"start":1727441267638,"stop":1727441267638,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ui","smoke"]},"source":"e52d625f91ce247f.json","parameterValues":[]}